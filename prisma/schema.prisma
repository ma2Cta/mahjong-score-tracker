generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

//////////// model 

model User {
  id       Int       @id @default(autoincrement())
  name     String
  sessions Session[]
  scores   Score[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Session {
  id       Int      @id @default(autoincrement())
  date     DateTime
  location String
  users    User[]
  games    Game[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Game {
  id          Int      @id @default(autoincrement())
  sessionId   Int
  session     Session  @relation(fields: [sessionId], references: [id])
  roundLength Int      @default(1)
  rounds      Round[]
  basePoint   Int      @default(25000)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Round {
  id          Int     @id @default(autoincrement())
  gameId      Int
  game        Game    @relation(fields: [gameId], references: [id])
  round       Int     @default(1)
  wind        Int     @default(0)
  roundInWind Int     @default(0)
  scores      Score[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Score {
  id      Int   @id @default(autoincrement())
  roundId Int
  round   Round @relation(fields: [roundId], references: [id])
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  point   Int   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
